// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Radigate.Server.Data;

#nullable disable

namespace Radigate.Server.Migrations
{
    [DbContext(typeof(PatientDataContext))]
    partial class PatientDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Radigate.Shared.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Ryan",
                            Identifier = "",
                            LastName = "Stiles"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Greg",
                            Identifier = "",
                            LastName = "Proops"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Colin",
                            Identifier = "",
                            LastName = "Mocharie"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Wayne",
                            Identifier = "",
                            LastName = "Bradey"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Aishia",
                            Identifier = "",
                            LastName = "Taylor"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Clive",
                            Identifier = "",
                            LastName = "Owen"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Drew",
                            Identifier = "",
                            LastName = "Carey"
                        });
                });

            modelBuilder.Entity("Radigate.Shared.TaskBase", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TaskGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TaskType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Tasks", (string)null);

                    b.HasDiscriminator<int>("TaskType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Radigate.Shared.TaskGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PatientId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("TaskGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Standard",
                            PatientId = 1
                        },
                        new
                        {
                            Id = 2,
                            Label = "Standard",
                            PatientId = 2
                        },
                        new
                        {
                            Id = 3,
                            Label = "Physics Checks",
                            PatientId = 2
                        });
                });

            modelBuilder.Entity("Radigate.Shared.TaskBool", b =>
                {
                    b.HasBaseType("Radigate.Shared.TaskBase");

                    b.Property<bool>("Checked")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(0);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comments = "",
                            Label = "Approved",
                            TaskGroupId = 1,
                            TaskType = 0,
                            Checked = false
                        });
                });

            modelBuilder.Entity("Radigate.Shared.TaskDouble", b =>
                {
                    b.HasBaseType("Radigate.Shared.TaskBase");

                    b.Property<double>("Number")
                        .HasColumnType("REAL");

                    b.HasDiscriminator().HasValue(2);

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Comments = "",
                            Label = "Mass Volume",
                            TaskGroupId = 2,
                            TaskType = 0,
                            Number = 150.10000610351562
                        });
                });

            modelBuilder.Entity("Radigate.Shared.TaskText", b =>
                {
                    b.HasBaseType("Radigate.Shared.TaskBase");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue(1);

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Comments = "",
                            Label = "Assigned RO",
                            TaskGroupId = 2,
                            TaskType = 0,
                            Text = "None."
                        });
                });

            modelBuilder.Entity("Radigate.Shared.TaskBase", b =>
                {
                    b.HasOne("Radigate.Shared.TaskGroup", "TaskGroup")
                        .WithMany("Tasks")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskGroup");
                });

            modelBuilder.Entity("Radigate.Shared.TaskGroup", b =>
                {
                    b.HasOne("Radigate.Shared.Patient", "Patient")
                        .WithMany("TaskGroups")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Radigate.Shared.Patient", b =>
                {
                    b.Navigation("TaskGroups");
                });

            modelBuilder.Entity("Radigate.Shared.TaskGroup", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
