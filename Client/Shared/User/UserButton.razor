<MudMenu Label="Full Menu Width" Variant="Variant.Filled"
    ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopLeft">
    <ActivatorContent>
        <MudAvatar Color="Color.Tertiary">
            <AuthorizeView>
                <Authorized>
                    @context.User.Identity.Name.Substring(0,1).ToUpper()
                </Authorized>
                <NotAuthorized>
                    ?
                </NotAuthorized>
            </AuthorizeView>
        </MudAvatar>
        <MudText Class="pt-2 pl-2" > Account</MudText>
    </ActivatorContent>
    <ChildContent>
        <AuthorizeView>
            <Authorized>
                <MudMenuItem OnClick="GoToProfile">Profile</MudMenuItem>
                <AdminMenu />
                <MudMenuItem OnClick="Logout">Logout</MudMenuItem>
            </Authorized>
            <NotAuthorized>
                <MudMenuItem><MudLink Href="@ReturnPath()">Sign In</MudLink></MudMenuItem>
                <MudMenuItem><MudLink Href="/register">Register</MudLink></MudMenuItem>
            </NotAuthorized>
        </AuthorizeView>
    </ChildContent>
</MudMenu>

@code {
    [Inject] private ILocalStorageService LocalStorage { get; set; }
    [Inject] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    [Inject] private NavigationManager NavigationManager { get; set; }

    private string ReturnPath() => "/signin?returnUrl=" + NavigationManager.ToBaseRelativePath(NavigationManager.Uri);

    private async Task GoToProfile() => NavigationManager.NavigateTo("/profile");

    private async Task Logout(){
        await LocalStorage.RemoveItemAsync("authToken");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("");
    }
}
